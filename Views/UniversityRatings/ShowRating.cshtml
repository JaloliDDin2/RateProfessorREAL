@model IEnumerable<MyRateApp2.Models.UniversityRating>

@{
    ViewData["Title"] = "ShowRating";
}

<h1>Ratings</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Reputation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Opportunity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Happiness)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Facilities)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Safety)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Clubs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Social)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Internet)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Food)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Overall)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Uni)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Reputation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Opportunity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Happiness)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Facilities)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Safety)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Clubs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Social)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Internet)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Food)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Overall)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Uni.Name)
                </td>
                @* <td>
                    <a asp-action="Edit" asp-route-id="@item.UniRatingId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.UniRatingId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.UniRatingId">Delete</a>
                </td> 
            </tr>
        }
    </tbody>
</table> *@


 <style>
  .feedback-card {
    font-family: Arial, sans-serif;
    max-width: 500px;
    margin: 20px auto;
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    color: #333;
  }
  .feedback-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }
  .feedback-card-header .rating {
    font-size: 3em;
    color: #06BBCC;
    font-weight: bold;
    margin-right: 10px;
  }
  .feedback-card-header .date {
    font-size: 0.8em;
    color: #666;
  }
  .feedback-card-body {
    margin-bottom: 20px;
  }
  .feedback-card-body .comment {
    font-size: 0.9em;
    margin-bottom: 20px;
  }
  .category {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .category .category-name {

    font-size: 0.9em;
  }
  .category .rating-bar {
    background-color: #ddd;
    border-radius: 5px;
    width: 70%;
    height: 8px;
    position: relative;
  }
  .category .rating-bar::after {
    content: '';
    display: block;
    background-color: #06BBCC;
    height: 8px;
    border-radius: 5px;
    position: absolute;
    align-items: ;
  }
  .feedback-card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.9em;
  }
  .feedback-card-footer .helpful {
    cursor: pointer;
  }
  .feedback-card-footer .comments {
    cursor: pointer;
  }

    .category {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
    }

        .category .category-name,
        .category .rating-value {
            white-space: nowrap;
        }

        .category .rating-bar-container {
            flex: 1; /* Allows the bar container to fill the space */
            margin: 0 10px;
            background-color: #ddd;
            border-radius: 5px;
            height: 8px;
            position: relative;
        }

        .category .rating-bar {
            background-color: #06BBCC;
            border-radius: 5px;
            height: 100%;
            position: absolute;
        }
</style> 
@{
    var reputationAverage = Model.Select(x => x.Reputation).Average();
    var happinessAverage = Model.Select(x => x.Happiness).Average();
    var opportunityAverage = Model.Select(x => x.Opportunity).Average();
    var internetAverage = Model.Select(x => x.Internet).Average();
    var facilitiesAverage = Model.Select(x => x.Facilities).Average();
    var clubsAverage = Model.Select(x => x.Clubs).Average();
    var safetyAverage = Model.Select(x => x.Safety).Average();
    var locationAverage = Model.Select(x => x.Location).Average();
    var socialAverage = Model.Select(x => x.Social).Average();
    var foodAverage = Model.Select(x => x.Food).Average();
    // ... other categories
}

<div class="rating-card">
    @* <div class="overall-rating">
        <span class="rating-value">@overallQualityAverage.ToString("0.0")</span>
        <span class="rating-label">Overall Quality</span>
    </div> *@

    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Reputation</span>
        <span class="rating-value">@reputationAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
    <i class="icon icon-reputation"></i>
    <span class="category-name">Happiness</span>
    <span class="rating-value">@happinessAverage.ToString("0.0")</span>
</div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Opportunity</span>
        <span class="rating-value">@opportunityAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Internet</span>
        <span class="rating-value">@internetAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Facilities</span>
        <span class="rating-value">@facilitiesAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Clubs</span>
        <span class="rating-value">@clubsAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Social</span>
        <span class="rating-value">@socialAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Safety</span>
        <span class="rating-value">@safetyAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Location</span>
        <span class="rating-value">@locationAverage.ToString("0.0")</span>
    </div>
    <div class="category-rating">
        <i class="icon icon-reputation"></i>
        <span class="category-name">Food</span>
        <span class="rating-value">@foodAverage.ToString("0.0")</span>
    </div>
    <!-- Repeat for other categories -->
</div>






@foreach (var item in Model)
{
    <div class="feedback-card">
        <div class="feedback-card-header">
            <div class="rating">@Html.DisplayFor(modelItem => item.Overall)</div>
            <div class="date">@Html.DisplayFor(modelItem => item.CreationDate)</div>
        </div>
        <div class="feedback-card-body">
            <div class="comment">
                @Html.DisplayFor(modelItem => item.Comment)
            </div>

            <!-- Category Rating Row -->
            <div class="category">
                <div class="category-name">Reputation</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Reputation * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Reputation)</div>
            </div>
            <div class="category">
                <div class="category-name">Location</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Location * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Location)</div>
            </div>
            <div class="category">
                <div class="category-name">Opportunities</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Opportunity * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Opportunity)</div>
            </div>
            <div class="category">
                <div class="category-name">Facilities</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Facilities * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Facilities)</div>
            </div>
            <div class="category">
                <div class="category-name">Internet</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Internet * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Internet)</div>
            </div>
            <div class="category">
                <div class="category-name">Food</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Food * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Food)</div>
            </div>
            <div class="category">
                <div class="category-name">Clubs</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Clubs * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Clubs)</div>
            </div>
            <div class="category">
                <div class="category-name">Social</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Social * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Social)</div>
            </div>
            <div class="category">
                <div class="category-name">Happiness</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Happiness * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Happiness)</div>
            </div>
            <div class="category">
                <div class="category-name">Safety</div>
                <div class="rating-bar-container">
                    <div class="rating-bar" style="width: @(item.Safety * 10)%"></div>
                </div>
                <div class="rating-value">@Html.DisplayFor(modelItem => item.Safety)</div>
            </div>
            <!-- Repeat for other categories, make sure to replace 'Reputation' with the actual category name and adjust the width accordingly -->
            <!-- ... other categories -->

        </div>
        <div class="feedback-card-footer">
            <!-- Footer content -->
        </div>
    </div>
}