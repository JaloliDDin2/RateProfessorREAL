@model IEnumerable<MyRateApp2.Models.ProfessorRating>

@{
    ViewData["Title"] = "ShowRating";
}

<h1>ProffessorRating</h1>

<p>
    <a asp-action="Create">Rate</a>
</p>
@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProfGrade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Attendance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WouldTakeAgain)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LevelOfDifficulty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CourseCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Textbook)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Grade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ForCredit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prof)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProfGrade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Attendance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WouldTakeAgain)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LevelOfDifficulty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Textbook)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ForCredit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prof.Fname)
                    @Html.DisplayFor(modelItem => item.Prof.Lname)
                </td>
                @* <td>
                    <a asp-action="Edit" asp-route-id="@item.ProfRateId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ProfRateId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProfRateId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table> *@

<style>
    .card {
        font-family: Arial, sans-serif;
        max-width: 1000px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
    }

    .ratings {
        display: flex;
        margin-bottom: 20px;
    }

    .rating-box {
        width: 100px;
        height: 100px;
        border-radius: 4px;
        color: #fff;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-right: 10px;
    }

        .rating-box .rating-title {
            font-size: 0.8em;
            margin-bottom: 5px;
        }

        .rating-box.quality {
            background-color: #06BBCC;
        }

        .rating-box.difficulty {
            background-color: #777;
        }

    .course-info {
        flex-grow: 1;
    }

    .course-title {
        font-size: 1.2em;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .course-details span {
        display: block;
        font-size: 0.9em;
        margin-bottom: 5px;
    }

    .comments {
        background-color: #f9f9f9;
        padding: 10px;
        border-radius: 4px;
        margin: 20px 0;
    }

    .tag {
        display: inline-block;
        background-color: #e0e0e0;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 0.8em;
        margin-right: 5px;
    }

    .date {
        font-size: 0.9em;
        text-align: right;
        color: #666;
    }
</style>


@if (Model != null && Model.Any())
{
    @foreach (var item in Model)
    {
        <div class="card">
            <div class="ratings">
                <div class="rating-box quality">
                    <span class="rating-title">QUALITY</span>
                    <span class="rating-value">@Html.DisplayFor(modelItem => item.ProfGrade)</span>
                </div>
                <div class="rating-box difficulty">
                    <span class="rating-title">DIFFICULTY</span>
                    <span class="rating-value">@Html.DisplayFor(modelItem => item.LevelOfDifficulty)</span>
                </div>
            </div>
            <div class="course-info">
                <div class="course-title">@Html.DisplayFor(modelItem => item.CourseCode)</div>
                <div class="course-details">
                    <span>For Credit: @Html.DisplayFor(modelItem => item.ForCredit)</span>
                    <span>Would Take Again: @Html.DisplayFor(modelItem => item.WouldTakeAgain)</span>
                    <span>Grade: @Html.DisplayFor(modelItem => item.Grade)</span>
                    <span>Textbook: @Html.DisplayFor(modelItem => item.Textbook)</span>
                </div>
                <div class="comments">
                    <p>@Html.DisplayFor(modelItem => item.Comment)</p>
                </div>
            </div>
            <div class="date">
                @Html.DisplayFor(modelItem => item.CreationDate)
            </div>
        </div>
    }

}
else
{
    // Model is empty, display a message or handle accordingly.
    <div>No data available.</div>
}

